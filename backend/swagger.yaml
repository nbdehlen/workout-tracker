apis: ["./api/routes/index.js"]
swaggerDefinition:
  openapi: "3.0.0"
  info:
    title: Workout Tracker API
    version: "1.0"
    contact:
      name: "Bastian"
  servers:
    - "url": https://workouttracker-api.herokuapp.com/
    - "url": http://localhost:5000/

  components:
    schemas:
      Signup:
        type: object
        properties:
          username:
            type: string
            required: true
            example: "King_Joe"
          email:
            required: true
            type: string
            example: "king_joe@kingjoe.com"
          password:
            required: true
            type: string
            example: "super difficult password"
      Login:
        type: object
        properties:
          username:
            type: string
            required: true
            example: "King_Joe"
          password:
            required: true
            type: string
            example: "super difficult password"
      Workout:
        type: object
        properties:
          "type":
            type: string
            maxLength: 50
            example: gym
          start:
            type: Date
            maxLength: 100
            minLength: 1
            example: "2020-03-25T12:00:00Z"
          grade:
            type: integer
            maximum: 10
            minimum: 1
            example: 7

          exercises:
            type: array
            items:
              type: object
              properties:
                exerciseType:
                  type: string
                  example: strength
                name:
                  type: string
                  example: squat
                compound:
                  type: boolean
                  example: true
                mainMuscle:
                  type: string
                  example: quads
                secondaryMuscles:
                  type: array
                  items:
                    type: string
                    example: glutes
                tool:
                  type: string
                  example: barbell
                unilateral:
                  type: boolean
                  example: false

                sets:
                  type: array
                  items:
                    type: object
                    properties:
                      weight:
                        type: number
                        example: 48
                      reps:
                        type: number
                        example: 12
                      rest:
                        type: string
                        example: "90"
                      time:
                        type: string
                        example: "45"

                duration:
                  type: string
                  example: "180"
                calories:
                  type: number

          end:
            type: Date
            maxLength: 100
            example: 2020-03-25T14:00:00Z

  paths:
    /api/v1/auth/signup:
      post:
        tags:
          - V1
        summary: Create user
        description: Use to register an account
        requestBody:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Signup"
        responses:
          "200":
            description: A successful response
          "400":
            description: Email or username already in use
          "500":
            description: Server error

    /api/v1/auth/login:
      post:
        tags:
          - V1
        summary: Login user
        description: Use to login account
        requestBody:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Login"
        responses:
          "200":
            description: A successful response return user object with x-access-token
          "401":
            description: Invalid password
          "404":
            description: User not found

    /api/v1/user/workouts:
      get:
        tags:
          - V1
        summary: Get all user workouts
        description: Use to request all user workouts
        parameters:
          - name: x-access-token
            description: jwt-token
            in: header
            schema:
              type: string
            required: true
        responses:
          "200":
            description: A successful response
          "401":
            description: Not authorized
          "403":
            description: No token provided
          "404":
            description: UserID does not exist

    /api/v1/user/workout/{workoutId}:
      patch:
        tags:
          - V1
        summary: Edit user workout
        description: Use to edit a user workout
        parameters:
          - name: workoutId
            in: path
            schema:
              type: string
            required: true
          - name: x-access-token
            description: jwt-token
            in: header
            schema:
              type: string
            required: true
        requestBody:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workout"

        responses:
          "200":
            description: A successful response
          "400":
            description: Parameters or workoutId is invalid
          "401":
            description: Not authorized
          "403":
            description: No token provided
          "404":
            description: WorkoutId does not exist or UserID does not exist
          "422":
            description: Body is empty
          "500":
            description: Server error
      delete:
        tags:
          - V1
        summary: Delete user workout
        description: Use to delete a user workout
        parameters:
          - name: x-access-token
            in: header
            schema:
              type: string
            description: jwt-token
            required: true
          - name: workoutId
            in: path
            schema:
              type: string
            required: true
        responses:
          "200":
            description: A successful response
          "400":
            description: WorkoutId is invalid
          "401":
            description: Not authorized
          "403":
            description: No token provided
          "404":
            description: WorkoutId does not exist
          "500":
            description: Server error

    /api/v1/user/workout/:
      post:
        tags:
          - V1
        summary: Create user workout
        description: Use to post a workout
        parameters:
          - name: x-access-token
            in: header
            description: jwt-token
            schema:
              type: string
            required: true
        requestBody:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workout"

        responses:
          "201":
            description: A successful response
          "400":
            description: WorkoutId is invalid
          "401":
            description: Not authorized
          "403":
            description: No token provided
          "404":
            description: WorkoutId does not exist
          "422":
            description: Body is empty
          "500":
            description: Server error
          "504":
            description: User not logged in
